name: Build and Deploy
on:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn Install
        run: yarn install --frozen-lockfile
      - name: Synchronize translations
        uses: docker://sergioisidoro/github-transifex-action:v0.2.0
        with:
            git_flow: false
            tx_token: ${{ secrets.TX_TOKEN }}
            pull_translations: true
            pull_sources: false
            push_translations: false
            push_sources: true
      - name: Lint
        run: yarn lint
      - name: Run unit tests
        run: yarn test:unit
      - name: Build
        run: yarn build
      - name: Deploy on ftp
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: "./dist/"
          server-dir: "./www/"
          dangerous-clean-slate: true
          exclude: CNAME
      - name: Deploy on github-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
